

function getAllBooks() {

    let books = [
        { id: 1, title: 'Ulysses', author: 'James Joyce', available: false, category: Category.Fiction },
        { id: 2, title: 'A Farewell to Arms', author: 'Ernest Hemingway', available: false, category: Category.Fiction },
        { id: 3, title: 'I Know Why the Caged Bird Sings', author: 'Maya Angelou', available: true, category: Category.Poetry },
        { id: 4, title: 'Moby Dick', author: 'Herman Melville', available: true, category: Category.Fiction }
    ];

    return books;
}

function logFirstAvailable(books = getAllBooks()): void {
    let numberOfBooks: number = books.length;
    let firstAvailable: string = '';

    for (let currentBook of books) {
        if (currentBook.available) {
            firstAvailable = currentBook.title;
            break;
        }
    }

    console.log('Total books ' + numberOfBooks);
    console.log('First available: ' + firstAvailable);
}

enum Category {
    Biography,
    Poetry,
    Fiction
}


function getBookTitlesByCategory(categoryFilter: Category = Category.Fiction): Array<string> {
    console.log('Getting books in category : ' + Category[categoryFilter]);
    const allBooks = getAllBooks();
    const filteredBooks: string[] = [];

    for (let currentBook of allBooks) {
        if (currentBook.category === categoryFilter) {
            filteredBooks.push(currentBook.title);
        }
    }

    return filteredBooks;
}


function GetBookById(id: number) {
    const allBooks = getAllBooks();
    return allBooks.filter(book => book.id === id)[0];
}


function logBookTitles(titles: string[]): void {
    for (let title of titles) {
        console.log(title);
    }
}

function createCustomerId(name: string, id: number): string {
    return name + id;
}

function CreateCustomer(name: string, age?: number, city?: string) {
    console.log('Creating customer ' + name);

    if (age) {
        console.log('Age: ' + age);
    }

    if (city) {
        console.log('City: ' + city);
    }
}

function CheckOutBooks(customer: string, ...bookIds: number[]): string[] {
    
    console.log('Checking out books for ' + customer);

    let booksCheckedOut: string[] = [];

    for (let id in bookIds) {
        console.log(typeof (id));
        let book = GetBookById(id);
        if (book.available) {
            booksCheckedOut.push(book.title);

        }
    }
    return booksCheckedOut;
}

function GetTitles(author: string): string[];
function GetTitles(available: boolean): string[];
function GetTitles(bookProperty: any): string[] {

    const allBooks = getAllBooks();
    const foundTitles: string[] = [];

    if (typeof bookProperty == 'string') {
        for (var book in allBooks) {
            if (book.author === bookProperty) {
                foundTitles.push(book.title);
            }
        }
    }
    else if (typeof bookProperty == 'boolean') {
        for (var book in allBooks) {
            if (book.available === bookProperty) {
                foundTitles.push(book.title);
            }
        }
    }

    return foundTitles;

}

//**********************************************************************

let hermansBooks = GetTitles('Herman Melville');
hermansBooks.forEach(title => console.log(title));



// checkOutBooks('Thorne', 1, 3, 4);
// let myBooks: string[] = checkOutBooks('Thorne', 1);
// myBooks.forEach(title => console.log(title));

// logFirstAvailable();

// let fictionBooks= getBookTitlesByCategory();
// fictionBooks.forEach(title => console.log(title));

//CreateCustomer('Michelle');
//CreateCustomer('Leigh',6);
// CreateCustomer('Jeremy',9,'Kariong');



// let idGenerator: (chars: string, nums: number) => string;
// idGenerator = (name:string , id:number) => { return id + name };


// let myId: string = idGenerator('john', 20);
// console.log(myId);


//const fictionBooks = getBookTitlesByCategory(Category.Fiction);

//fictionBooks.forEach((val, idx, arr) => console.log(++idx + ' - ' + val));

//console.log(getBookById(2).title);